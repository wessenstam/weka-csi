apiVersion: v1
kind: Secret
metadata:
  name: csi-wekafs-api-secret
  namespace: csi-wekafs
type: Opaque
stringData:
  # A username to connect to the cluster API
  username: csi_user
  # A password to connect to the cluster API
  password: WEKA/4u!!
  # An organization to connect to (default Root)
  organization: root
  # A comma-separated list of cluster management endpoints. Format: <IP:port>
  # It is recommended to configure at least 2 management endpoints (cluster backend nodes), or a load-balancer if used
  # e.g. 172.31.15.113:14000,172.31.12.91:14000
  endpoints: 10.1.1.10:14000,10.1.1.20:14000,10.1.1.30:14000,10.1.1.40:14000,10.1.1.50:14000,10.1.1.60:14000
  # protocol to use for API connection (may be either http or https)
  scheme: http
  # for multiple clusters setup, set a specific container name 
  localContainerName: ""
  # for cloud deployments with automatic healing and auto-scaling, set to "true" to enable automatic updates of the endpoints.
  # The API endpoints will be updated automatically on first connection to the cluster API, as well as on each re-login
  # maybe either (true/false),
  # NOTE: if a load balancer is used to access the cluster API, leave this setting as "false"
  autoUpdateEndpoints: "'false'"
  # It is recommended to configure all NFS server IP addresses to better share the load/balance the traffic.
  # NOTE: this setting is optional and should be used only when the NFS Group IP addresses are not set in the cluster
  # WARNING: providing a load balancer IP address that uses NFS connection redirects (also known as `referrals`) to other servers is not supported.
  # e.g. 10.100.100.1,10.100.100.2
  nfsTargetIps: "10.1.1.10,10.1.1.20,10.1.1.30,10.1.1.40,10.1.1.50,10.1.1.60"
  # When using HTTPS connection and self-signed or untrusted certificates, provide a CA certificate in PEM format, base64-encoded
  # for cloud deployments or other scenarios where setting an NFS Group IP addresses is not possible,
  # provide a comma-separated list of NFS target IP addresses in form of <IP> (base64-encoded)
  # caCertificate: <base64-encoded-PEM>
  caCertificate: ""
